1. code for countdown.jsx :
comment gula khub valo moto porbo..

 componentDidUpdate: function (previousProps, previousState) {
        /*
         *Kono props / refs update hole tokhn ei function ta call hoy...
         *
         * kokhn countdownStatus = started and kokhn countdownStatus = stopped eta bujhbo kivabe?
         * eta bojhar jonno component life cycle use korbo..
         * jokhni kono state change hoy tokhni componentDidUpdate() function call hoy..
         * eta kivabe bujhte pare je kokhn kon state e ace?
         * ejonno parameter e previousState and previousProps pathate hoy...
         * so 1st e this.state.countdownStatus = 'started' hocce recent state and
         * previousState.countdownStatus = 'stopped' hocce previous state...
         * amra ei 2ta check korte pari.. jodi tara equal na hoy tar mane bujhbo state change hoice,,
         * so now necessary function use korte parbo....
         *
         * */

        if (this.state.countdownStatus !== previousState.countdownStatus) {
            switch (this.state.countdownStatus) {
                case 'started' :
                    this.startTimer();
                    break;
                /*
                 * jokhn clock started state e jabe tokhn timer start
                 * kore dilam...
                 * */

                case 'stopped' :
                    this.setState({count: 0});
                case 'paused' :
                    clearInterval(this.timer);
                    this.timer = undefined;
                    break;
            }
        }
    },

    componentWillUpdate: function (nextProps, nextState) {
        /*
         * eta component update howar thik ag die execute hoy..
         *
         * */
    },


    componentWillUnmount: function () {
        /*
         * ei function ta automatically call hoy jokhn
         * component dom theke remove hoy...
         * mane component browser theke visually
         * remove hye jay...
         * */

        console.log('Component removed form the dom');
        alert('Are you sure want to leave this page?');
        /*
         * now browser e page refresh korle countdown theke
         * timer page e switch korle dekhte parbo je console tab e(developer tool)
         * Component remove message ta dekhacce.. mane holo
         * countdown page er component gula remove howar thik ag muhurte ei function ta call hoy..
         *so now jodi countdown page theke onno page e jete chai tokhn age alert dibe
         *  "Are you sure want to remove?"
         * */

        clearInterval(this.timer);
        this.timer = undefined;
    },

    componentWillMount: function () {
        /*
         * kono component browser e render howar age
         * ei lifecycle function ta call hoy...
         * as eta render howar agei call hoy ,
         * so component er refs or props er upor kono control
         * thakena ei function er... so input filed ba jekono kisur
         * value change korte chaile eta ei function e hbena...
         * */

        console.log('Component will be mounted.. Please wait....');
        alert('Component will be mounted.. Please wait....');


    },
    componentDidMount: function () {
        /*
         * ei lifecycle method ta browser e sobkisu render howar
         * por then run hoy...
         * so ei method e component er sob refs and props ke
         * access korte parbo karon eta render howar por run hoy...
         *
         * */

        console.log('Component Mounted Successfully');
        alert('Component Mounted Successfully');

    },

componentWillReceiveProps: function (newProps) {
        /*
         * amader countdown 1 second por por update hoy..
         * jmn countdownStatus = started hole countdown hote thake..
         * now jokhn countdown hote thakbe tokhn proti second e countdownStatus
         * kivabe update hote thake eta jodi jante chai tokhn ei lifecycle mehod use korbo..
         *
         * */
        console.log('Component will receive props ', newProps.countdownStatus);
    },
