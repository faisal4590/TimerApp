1. code for Timer.test.jsx :

var React = require('react');
var ReactDOM = require('react-dom');
var expect = require('expect');
var $ = require('jQuery');
var TestUtils = require('react-addons-test-utils');

var Timer = require('Timer');

describe('Timer', ()=> {
    it('should exist', ()=> {
        expect(Timer).toExist();
    });

    it('should start timer on started status', (done)=> {
        var timer = TestUtils.renderIntoDocument(<Timer/>);

        timer.handleStatusChange('started');
        expect(timer.state.count).toBe(0);

        setTimeout(()=> {
            expect(timer.state.timerStatus).toBe('started');
            expect(timer.state.count).toBe(1);
            done();
        }, 1001);
        /*
         * 1 sec por count 1 kore barlo kina seta check korlam
         *
         * */
    });

    it('should pause timer on paused status', (done)=> {
        var timer = TestUtils.renderIntoDocument(<Timer/>);

        timer.setState({
            count: 10
        });
        timer.handleStatusChange('started');
        timer.handleStatusChange('paused');

        setTimeout(()=> {
            expect(timer.state.timerStatus).toBe('paused');
            expect(timer.state.count).toBe(10);
            done();
        }, 1001);
        /*
         * pause korle pause hocce kina seta check korlam//
         *
         *
         * */
    });

    it('should clear timer on stopped status', (done)=> {
        var timer = TestUtils.renderIntoDocument(<Timer/>);

        timer.handleStatusChange('started');
        timer.handleStatusChange('stopped');


        setTimeout(()=> {
            expect(timer.state.timerStatus).toBe('stopped');
            expect(timer.state.count).toBe(0);
            done();
        }, 1001);
        /*
         *Clear e click korle stop hye jacce kina seta check korlam
         * */
    });

});