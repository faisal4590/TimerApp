// this is nearly similar as countdown application..
//eta aro easy cause just count ke 1 kore barate thakbo
//and etar kono end case nie tension kora lagbena.. ajibon cholte thakbe..

1.code for Timer.jsx :

var React = require('react');
var Clock = require('Clock');
var Controls = require('Controls');

var Timer = React.createClass({

    getInitialState: function () {
        return {
            count: 0,
            timerStatus: 'stopped'
        };
    },

    componentDidUpdate: function (prevProps, prevState) {
        if (this.state.timerStatus !== prevState.timerStatus) {
            switch (this.state.timerStatus) {
                case 'started' :
                    this.handleStart();
                    break;
                case 'stopped':
                    this.setState({
                        count: 0
                    });
                case 'paused' :
                    clearInterval(this.timer);
                    this.timer = undefined;
                    break;
            }
        }
    },


    handleStart: function () {
        this.timer = setInterval(() => {
            this.setState({
                count: this.state.count + 1
            });
        }, 1000);
    },

    componentWillUnmount : function () {
      clearInterval(this.timer);
    },

    handleStatusChange: function (newTimerStatus) {
        console.log(newTimerStatus);
        this.setState({
            timerStatus: newTimerStatus
        });
    },

    render: function () {
        var {count, timerStatus} = this.state;

        return (
            <div>
                <h1 className="page-title">Timer Application</h1>
                <Clock totalSeconds={count}/>

                <Controls countdownStatus={timerStatus} onStatusChange={this.handleStatusChange}/>

            </div>
        );
    }
});

module.exports = Timer;

